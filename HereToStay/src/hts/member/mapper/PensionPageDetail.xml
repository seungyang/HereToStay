<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pensionPageDetail">

<select id="getPension" resultType="Pension">
select ot.*,nvl(rv.revCnt,0) as rev_Cnt, nvl(rv.avgStar,0) as avg_Star
from (select a.* from pension a where a.pen_id= #{penId})ot left outer join
(select p.pen_id as p,count(rv.rev_id) as revCnt,floor(avg(rv.rev_star)) as avgStar from reservation re,pension p,room r,review rv 
where p.pen_id=r.pen_id and r.rom_id=re.rom_id and re.res_id =rv.res_id group by p.pen_id)rv
on ot.pen_id=rv.p
</select>
<select id="getRooms" parameterType="hashMap" resultType="Room">
select * from room r where pen_id=#{penId} and r.rom_id not in 
(select rom_id from reservation <where> res_status = '예약완료' and
<![CDATA[((#{checkIn} >=]]> res_indate and #{checkIn} <![CDATA[<]]> res_outdate)
  or(#{checkOut} <![CDATA[>]]> res_indate and #{checkOut} <![CDATA[<=]]>res_outdate) 
  or (res_indate<![CDATA[>=]]>#{checkIn} and res_indate<![CDATA[<]]>#{checkOut})
  or (res_outdate <![CDATA[>]]>#{checkIn} and res_outdate <![CDATA[<=]]>#{checkOut})) 
 </where>) <if test ="persons!=null">and r.rom_people>= #{persons}</if> and r.rom_status = '운영'
order by rom_cost 
</select>
<select id="getReviews" resultType="Review">
select r.rom_name,rv.*,m.mem_id from reservation re,pension p,room r,review rv,member m 
where p.pen_id=r.pen_id and r.rom_id=re.rom_id and re.res_id =rv.res_id and m.mem_id=re.mem_id and p.pen_id=#{penId}
</select>
<select id='getRecoPension' parameterType="hashMap" resultType="Pension">
select f.pen_id,f.pen_name,f.pen_ADDR2,f.pen_Intro,f.pen_star,f.min_cost,f.rev_cnt,f.avg_star
from(select cn.*,rownum as rnum
from
 (select p.*,ot.*,NVL(rv.cnt,0) as rev_cnt,floor(NVL(rv.avgStar,0)) as avg_star
 from pension p,(
 select p.pen_id as pen,min(r.rom_Cost) as min_Cost
 from pension p ,room r
<where> p.pen_id=r.pen_id and p.pen_id <![CDATA[<>]]> #{penId}
  </where>
 group by p.pen_id
 )ot left outer join(select p.pen_id as p,count(rv.rev_id) as cnt,avg(rv.rev_star) as avgStar from reservation re,pension p,room r,review rv 
where p.pen_id=r.pen_id and r.rom_id=re.rom_id and re.res_id =rv.res_id group by p.pen_id)rv
on ot.pen=rv.p
 where p.pen_id=ot.pen)cn
)f
</select>
<select id="getRoomsAjax" parameterType="hashMap" resultType="Room">
select * from room r where r.pen_id=#{penId}
<if test ="persons!=null"> and r.rom_people<![CDATA[>=]]>${persons}</if> and r.rom_status = '운영'
and r.rom_id not in (select rom_id from reservation where res_status = '예약완료' and 
<![CDATA[((#{checkIn} >=]]> res_indate and #{checkIn} <![CDATA[<]]> res_outdate)
  or(#{checkOut} <![CDATA[>]]> res_indate and #{checkOut} <![CDATA[<=]]>res_outdate) 
  or (res_indate<![CDATA[>=]]>#{checkIn} and res_indate<![CDATA[<]]>#{checkOut})or 
  (res_outdate <![CDATA[>]]>#{checkIn} and res_outdate <![CDATA[<=]]>#{checkOut}))) 
order by r.rom_cost
</select>
</mapper>